C       FILE:  REORDR.FTN                       PREP SUBROUTINE
C
C       WRITTEN BY W.P.L. CARTER
C       UPDATED AND MAINTAINED BY S.E. HEFFRON
C       LAST UPDATE:  W.P.L. CARTER  6/20/87
C	MJM added SNO functionality 11/8/03
C
C
        SUBROUTINE REORDR
C
C       CALLED AFTER REACTIONS READ IN.  DETERMINES TYPES OF SPECIES AND
C       ORDERS THEM ACCORDINGLY.  SPECIES ARE ORDERED CONSTANT, PRODUCT
C       ONLY ("BUILDUP"), ACTIVE, AND STEADY STATE.  OUTPUTS LIST OF
C       SPECIES INPUT.  CHANGES TYPES IF NEEDED BASED ON USE IN REACTIONS
C       AND GIVES WARNINGS IF USEAGE IS NOT CONSISTENT WITH SPECIFICATIONS.
C
C       CONSTANT AND STEADY STATE SPECIES MUST BE DEFINED AS SUCH.
C       BUILDUP SPECIES ARE SPECIES WHICH ARE NOT DECLARED AS ACTIVE
C       AND WHICH ARE FORMED BUT DON'T REACT.  SPECIES WHICH NEITHER
C       FORM OR REACT ARE "DUMMY" SPECIES, WHICH ARE DELETED.
C
C       CALLED BY:  PREP MAIN
C
C
C       SPECIFICATIONS OF PREPARATION PROGRAM PARMS, VARIABLES, AND ARRAYS
C
        INCLUDE 'pspecs.inc'
C
C       THIS IS EQUIVALENCED TO VARIABLES IN COMMON
        INTEGER   NINDOR(6)
        EQUIVALENCE (NSC,NINDOR(1))
C
C       LOCAL SPECIFICATIONS
C
        LOGICAL   SSOK
        INTEGER   INDORD,SPORD
        DIMENSION INDORD(MAXNS,6),SPORD(MAXNS)
        EQUIVALENCE (INDORD(1),SPORD(1))
C
C       FOLLOWING ARE USED TO SAVE CHARACTERISTICS BEFORE RE-ORDERING
C
        INTEGER   NNO2(MAXNS),SNO2(MAXNS)
        REAL*4 MWT2(MAXNS),CNO2(MAXNS),XNO2(MAXNS),CONC2(MAXNS),
     &         ONO2(MAXNS)
        CHARACTER NAME2(MAXNS)*16
C
C
C      WRITE LIST OF SPECIES WITH INITIAL ORDERING
C
        WRITE (OUT,2002) (I,SPTYP(I),NAME(I),I=1,NS)
 2002   FORMAT ('0LIST OF REACTANTS INPUT'//'         DECLARED TYPES:'
     &   ,'  1 = CONSTANT,  2 = BUILDUP,  3 = DUMMY, 4 = ACTIVE,  5 ='
     &   ,' ST. STATE,  6 = UNSPECIFIED'//(' ',4(I6,') [',I1,'] ',A16)))
C
C       DECLARED SPTYP: 1=CONST, 2=BO, 3=DUMMY, 4=ACT, 5=SS, 6=UNSPECIFIED
C       (DECLARED DUMMY NOT USED IN THIS VERSION)
C       FIND WHICH SPECIES ARE DUMMY AND BO.
C               BIT 14 OF SPTYP SET IF SPECIES REACTS
C               BIT 13 OF SPTYP SET IF SPECIES IS FORMED
C
 2010   DO 2020 IRXN=1,NRXN
        NR=NRTOSR(IRXN)
        IF (NR.LE.0) GOTO 2022
        DO 2021 I=1,NR
        IR=IRTOSR(I,IRXN)
        IF (IR.GT.0) SPTYP(IR)=IOR(16384,SPTYP(IR))
 2021   CONTINUE
 2022   NP=NPRODS(IRXN+1)-NPRODS(IRXN)
        IF (NP.EQ.0) GOTO 2020
        DO 2023 I=1,NP
        J=IPRODS(NPRODS(IRXN)+I-1)
        IF (J.LE.0) GOTO 2023
        SPTYP(J)=IOR(8192,SPTYP(J))
 2023   CONTINUE
 2020   CONTINUE
C
C      CHANGE SPTYP WHERE APPROPRIATE.  NOW, TYPE 6=DELETABLE DUMMY
C
       DO 2100 I=1,NS
       IF (SPTYP(I).GE.8192) GOTO 2040
C  -    DUMMY - MARK FOR DELETE UNLESS EXPLICITLY DECLARED DUMMY
       IF (SPTYP(I).EQ.3) GOTO 2100
       SPTYP(I)=6
       GOTO 2100
 2040  IF (SPTYP(I).GE.16384) GOTO 2050
C  -    BUILDUP-ONLY.  MARK AS SUCH UNLESS CONSTANT OR EXPLICITLY
C       DECLARED ACTIVE.  IF  CONSTANT, MARK AS DUMMY.
       SPTYP(I)=SPTYP(I)-8192
       GOTO (2041,2100,2043,2100,2045,2042),SPTYP(I)
 2041  SPTYP(I)=3
       GOTO 2100
 2042  SPTYP(I)=2
       GOTO 2100
 2043  WRITE (OUT,2044) NAME(I)
 2044  FORMAT (/' WARNING:  REACTION(S) FORM SO-CALLED DUMMY SPECIES ',
     & A16,'.  CHANGED TO B.O.')
       SPTYP(I)=2
       GOTO 2100
 2045  WRITE (OUT,2046) NAME(I)
 2046  FORMAT (/' WARNING:  SO-CALLED STEADY-STATE SPECIES ',A16,
     &  ' FORMED ONLY.  CHANGED TO B.O.')
       SPTYP(I)=2
       GOTO 2100
C  -    REACTS
 2050  SPTYP(I)=SPTYP(I)-16384
       SSOK=SPTYP(I).GE.8192
       IF (SSOK) SPTYP(I)=SPTYP(I)-8192
       GOTO (2100,2051,2053,2100,2056,2055),SPTYP(I)
 2051  WRITE (OUT,2052) NAME(I)
 2052  FORMAT (/' WARNING:  SO-CALLED B.O. SPECIES ',A16,
     & ' REACTS.  CHANGED TO ACTIVE.')
       SPTYP(I)=4
       GOTO 2100
 2053  WRITE (OUT,2054) NAME(I)
 2054  FORMAT (/' WARNING:  SO-CALLED DUMMY SPECIES ',A16,
     & ' REACTS.  CHANGED TO ACTIVE.')
 2055  SPTYP(I)=4
       GOTO 2100
 2056  IF (SSOK) GOTO 2100
       WRITE (OUT,2057) NAME(I)
 2057  FORMAT (/' WARNING:  NO REACTION FORMS SO-CALLED STEADY-',
     & 'STATE SPECIES ',A16,'.  CHANGED TO CONSTANT')
       SPTYP(I)=1
 2100  CONTINUE
C
C      START ORDERING.  NOTE NINDOR IS 'EQUIVALENT' TO NSC,NB,etc
C      SO THESE ARE BEING DEFINED IN 3020 LOOP.
C
       DO 3010 I=1,6
 3010  NINDOR(I)=0
C
       DO 3020 I=1,NS
       NAME2(I)=NAME(I)
       SNO2(I)=SNO(I)
       NNO2(I)=NNO(I)
       CNO2(I)=CNO(I)
       ONO2(I)=ONO(I)
       XNO2(I)=XNO(I)
       MWT2(I)=MWT(I)
       CONC2(I)=CONC0(I)
       J=SPTYP(I)
       NINDOR(J)=NINDOR(J)+1
 3020  INDORD(NINDOR(J),J)=I
C
       NNS=0
       DO 3030 J=1,6
       N=NINDOR(J)
       IF (N.EQ.0) GOTO 3030
       DO 3035 I=1,N
       NNS=NNS+1
 3035  SPTYP(NNS)=INDORD(I,J)
 3030  CONTINUE
       IF (NNS.NE.NS) WRITE (OUT,3039) NNS,NS
 3039  FORMAT ('0PROGRAM ERROR.  NS, NNS =',2I10,' NOT EQUAL.')
C
       DO 3040 I=1,NS
       J=SPTYP(I)
       NAME(I)=NAME2(J)
       SNO(I)=SNO2(J)
       NNO(I)=NNO2(J)
       CNO(I)=CNO2(J)
       ONO(I)=ONO2(J)
       XNO(I)=XNO2(J)
       MWT(I)=MWT2(J)
       CONC0(I)=CONC2(J)
 3040  SPORD(J)=I
C
C      SPORD ARRAY NOW GIVES NEW ORDERING FROM OLD ORDER.
C      USE IT TO REORDER IRTOSR, IPRODS ARRAYS
C
       DO 3050 IRXN=1,NRXN
       NR=NRTOSR(IRXN)
       IF (NR.LE.0) GOTO 3055
       DO 3052 I=1,NR
        IR=IRTOSR(I,IRXN)
        IF (IR.GT.0) IRTOSR(I,IRXN)=SPORD(IR)
 3052   CONTINUE
 3055  NP=NPRODS(IRXN+1)-NPRODS(IRXN)
       IF (NP.EQ.0) GOTO 3050
       DO 3057 I=1,NP
       INDEXP=NPRODS(IRXN)+I-1
       IF (IPRODS(INDEXP).GT.0) IPRODS(INDEXP)=SPORD(IPRODS(INDEXP))
 3057  CONTINUE
 3050  CONTINUE
C
       IF (ASMPRT) WRITE (OUT,3070)
 3070  FORMAT ('0SPECIES REORDERED')
C
C
C       SEE IF TOO MANY SS SPECIES
C
        IF (NSS.GT.MAXSS) THEN
                I=MAXSS
                WRITE (OUT,*) 'TOO MANY STEADY-STATE SPECIES.  MAX =',I
                STOP 'TOO MANY STEADY-STATE SPECIES'
        ENDIF
C
C       INITIALIZE INDICES USED FOR CODE PREP
C
        NSC1=1
        NSC2=NSC
        NB0=NSC
        NB1=NSC+1
        NB2=NSC+NB
        ND1=NB2+1
        ND2=NB2+NDUM
        N0=ND2
        NA1=ND2+1
        N01=NA1
        NA2=ND2+NDY
        NS1=NA2+1
        NS2=NA2+NSS
C
        RETURN
        END
