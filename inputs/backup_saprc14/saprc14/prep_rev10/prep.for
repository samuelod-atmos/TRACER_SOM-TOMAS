C       FILE:  PREP.FTN         MAIN FOR PREPARATION PROGRAM
C
C       WRITTEN BY W.P.L. CARTER
C       UPDATED AND MAINTAINED BY S.E. HEFFRON
C       LAST UPDATE:    W.P.L. CARTER  6/20/87
C			M.J. Mysliwiec 11/1/03
C
C
        PROGRAM PREP
C
C       MAIN FOR SAPRC MODEL PREPARATION PROGRAM.  THIS VERSION TO
C       PROCESS CHEMICAL MECHANISM FILES AND USE DATA THERE TO
C       PREPARE MODEL-DEPENDENT SUBROUTINES FOR USE IN AIRSHED MODELS.
C
C       THIS ROUTINE OPENS MAIN INPUT AND LISTING OUTPUT FILES, GETS
C       MODEL PREPARATION CONTROL PARAMETERS, AND CALLS SUBROUTINES
C       TO READ, PROCESS, AND OUTPUT MODEL.
C
C
C       INPUT FILES ARE:          input-name.prp    MECHANISM DATA
C
C       OUTPUT FILES ARE:         input-name.pro    MECHANISM LISTING
C                         [moduic]input-name.mod    MECHANISM DATA
C                         [moduic]input-name.ftn    MECHANISM-DEPENDENT
C                                                   SUBROUTINES
C
C
C       SUBROUTINES CALLED:
C
C               SYSTEM ROUTINES:
C
C       ERRSET  ... FORTRAN ERROR INITIALIZATION
C
C               "NEWSUBS" (SAPRC) LIBRARY UTILITY ROUTINES
C
C       FILEIN  ... ROUTINE TO OPEN INPUT FILE
C       FILNAM  ... ROUTINE TO CREATE FILE NAME
C       INBUF   ... GET LINE FROM INPUT FILE.  GIVES PROMPT IF INPUT
C                   FROM USER REQUIRED.
C       INITIN  ... INITIALIZATION FOR INBUF INPUT
C       LENSTR  ... GET LENGTH OF STRING
C       TMARK   ... GET DATE AND TIME, AND PUT IN STRING
C
C               PREP SUBROUTINES
C
C       RDRXN   ... INITIALIZE MECHANISM PARAMETERS, AND THEN READ
C                   MECHANISM INPUT.  CALLS OTHER SUBROUTINES.
C	TYPEO	... Type-o-matic types species according to source
C		    defined in input
C       REORDR  ... ORDER REACTANTS BY TYPE
C       PNHRXN  ... PRODUCE MODEL-DEPENDENT SUBROUTINES.  CALLS OTHER
C                   SUBROUTINES.
C       LISTSC  ... LIST SPECIES AND COEFFICIENTS ON LISTING OUTPUT
C                   DATA SET
C       SAVERX  ... WRITE ".MOD" FILE CONTAINING MECHANISM SPECIFIC
C                   DATA
C
C
C       INCLUDE SPECIFICATIONS OF PROGRAM PARAMETERS, COMMON VARIABLES
C       AND ARRAYS FOR ALL PREP SUBROUTINES.
C
        INCLUDE 'pspecs.inc'
C
C
C       SYSTEM SPECIFIC CALL TO SUPPRESS 'INPUT CONVERSION ERROR' MESSAGES
C
c        CALL ERRSET (64,,.FALSE.,,.FALSE.,)
C
C       THE STRINGS MODUIC, ETC. ARE USED FOR SPECIFYING DIRECTORIES OR
C       OR DEVICES FOR VARIOUS TYPES OF FILES READ OR CREATED BY THIS
C       PROGRAM.  IN THIS VERSION, ALL FILES USED MUST BE IN THE DEFAULT
C       DIRECTORY AND DEVICE.  THESE VARIABLES BELOW CAN BE CHANGED IF
C       OTHER DIRECTORIES OR DEVICES ARE TO BE USED FOR VARIOUS TYPES
C       OF FILES.
C
C       (DIRECTORY AND DEVICE FOR .MOD AND .FTN OUTPUT FILES
        MODUIC=' '
C       (DIRECTORY AND DEVICE FOR PHOTOLYSIS (ABSORPTION COEFFICIENT,
C        QUANTUM YIELD) FILES, IF SPECIFIED USING THE PF=filename OPTION)
        PHFUIC=' '
C       (DIRECTORY AND DEVICE FOR THE MECHANISM INPUT (.PRP) AND LISTING
C        OUTPUT (.PRO) FILES)
        LOGUIC=' '
C       (DIRECTORY AND DEVICE FOR TEMPORARY FILES USED BY PROGRAM)
        TMPUIC=' '
c
c      MAX PARAMETER CHECK ADDED BY MJK 1/14/2012
       if(maxmax.lt.maxrxn .or. maxmax.lt.maxco .or. 
     +       maxmax.lt.maxns)then
        print*,'maxmax must be increased to max of:'
        print*,'maxrxn:',maxrxn
        print*,'maxco:',maxco
        print*,'maxns:',maxns
        stop 'prep.for marker1'
       endif
C
C      INITIALIZE FOR INPUT
C
       CALL INITIN(4)
       NERR=0
C
C      FOR 'DUMMY' PREP SET YESPRP=.FALSE., NOPRP=.TRUE.
C
       YESPRP=.TRUE.
       NOPRP=.FALSE.
C
C      PROMPT USER FOR INPUT FILE NAME.  INPUT FILE NAME EXTENSION
C      MUST BE ".PRP".  THIS SAME NAME IS USED FOR OUTPUT ".PRO",
C      ".MOD", AND ".FTN" FILES.
C
C
  100  WRITE (ICRT,101)
  101  FORMAT ('NAME FOR INPUT/OUTPUT FILES = ')
       MODFIL=' '
       READ (IKEY,105,END=9999) MODFIL
  105  FORMAT (A16)
  107  IF (MODFIL.EQ.' ') CALL EXIT
C
C      OPEN INPUT FILE
C
       IOB160=' '
       CALL FILNAM (LENAM,IOB160,LOGUIC,MODFIL,'.prp ')
       CALL FILEIN
       IF (IORET.EQ.1) GOTO 100
C
C      GET TITLE
C
       CALL INBUF ('TITLE  :',8)
       IF (IORET.EQ.2) GOTO 999
       TITLE(17:80)=IOB160
       CALL TMARK(TITLE(1:16))
C
C      SET PARMS TO DEFAULT
C
       ASMPRT=.FALSE.
       TEMPR=298.12
       TREF=300.0
       NPHOTK=0
       LITTLE=1.0E-30
C
C      OPEN OUTPUT FILE
C
       IOB160=' '
       CALL FILNAM (LENAM,IOB160,LOGUIC,MODFIL,'.pro ')
       OPEN (UNIT=OUT,NAME=IOB160,status='UNKNOWN',ERR=100)
C
C      WRITE HEADER ON OUTPUT FILE
C
       WRITE (OUT,121) TITLE(1:16),TITLE(17:80)
  121  FORMAT ('1',130('*')//1X,29X,'S A P R C   M O D E L   P R E P',
     &  ' A R A T I O N   P R O G R A M'//1X,52X,A16//1X,28X,A64/
     &  /1X,130('*')/'0PARAMETERS SPECIFIED:'/' ')
C
C      READ IN PARMS.  '.' IN FIRST LINE MEANS END OF PARM
C      INPUT, REST OF COMMANDS GO TO RDRXN
C
  200  CALL INBUF ('PARM.  :',8)
       IF (IORET.EQ.2) GOTO 999
       IF (IOB160(1:1).EQ.'.') GOTO 1000
       IF (IOB160(1:4).EQ.'    ') GOTO 1000
       OUTBUF=' '
       WRITE (OUTBUF,202) IOB160
  202  FORMAT (5X,A80)
       LOUTBF=LENSTR(IOB160,80)+5
C
       IF (IOB160(1:5).EQ.'DEBUG') THEN
                ASMPRT=.TRUE.
       ELSEIF (IOB160(1:4).EQ.'TEMP') THEN
                CALL ALIN16 (2,IOB160)
                DECODE (16,221,IOB160(17:80),ERR=800) X
  221           FORMAT (G16.0)
                IF (X.LE.0.0) GOTO 800
                TEMPR=X
        ELSEIF (IOB160(1:4).EQ.'TREF') THEN
                CALL ALIN16 (2,IOB160)
                DECODE (16,221,IOB160(17:80),ERR=800) X
                IF (X.LE.0.0) GOTO 800
                TREF=X
        ELSEIF (IOB160(1:6).EQ.'LITTLE') THEN
                CALL ALIN16 (2,IOB160)
                DECODE (16,221,IOB160(17:80),ERR=800) LITTLE
        ELSE
                GOTO 800
        ENDIF
C
C
        WRITE (OUT,701) OUTBUF
  701   FORMAT (' ',A131)
        GOTO 200
C
C      ERROR IN INPUT OF PARAMETER
C
  800  WRITE (OUTBUF(LOUTBF+1: ),801)
  801  FORMAT ('     <--ERROR.  IGNORED.')
       WRITE (OUT,701) OUTBUF
       NERR=NERR+1
       WRITE (ICRT,802) IOB160(1:32)
  802  FORMAT (' ERROR.  UNRECOGNIZED PARM.  LINE = ',A32)
       GOTO 200
C
C      DONE WITH PARAMETER INPUT
C
C      CALL RDRXN TO READ REACTION LIST.  RDRXN ALSO DOES SOME
C      INITIALIZING.  FIRST WRITE HEADER FOR REACTION LISTING
C      ON OUTPUT FILE
C
 1000  WRITE (OUT,1001)
 1001  FORMAT (/' REACTIONS INPUT:',62X,'A',8X,'EA',6X,'B'/79X,
     &   '(IN PPM-MIN UNITS)')
C
        CALL RDRXN
C
C       IF AN ERROR OCCURRED, THEN NO CREATION OF MODEL FILES
C       IS DONE, BUT PROCESSING CONTINUES TO SEE IF THERE ARE OTHER
C       PROBLEMS WHICH NEED TO BE FIXED
C
        IF (NERR.GT.0) THEN
                YESPRP=.FALSE.
                NOPRP=.TRUE.
        ENDIF
C
C       Create the SOM species
C
        CALL SOM
C
C	Type the specified reactions.
C
        CALL TYPEO
C
C
C       RE-ORDER REACTANTS DEPENDING ON TYPE.
C
        CALL REORDR
C
C       IF NO ERROR OCCURRED, PRODUCE CODE.  THIS IS DONE BY "PNHRXN",
C       WHICH CALLS THE MODULES TO PRODUCE THE VARIOUS TYPES OF MODEL-
C       DEPENDENT SUBROUTINES.  IF ERRORS OCCUR DURING THIS PROCESSING,
C       NO MODEL OUTPUT FILES PRODUCED.
C
        IF (YESPRP) THEN
C
                CALL PNHRXN
C
                IF (NERR.GT.0) THEN
                       YESPRP=.FALSE.
                       NOPRP=.TRUE.
                ENDIF
        ENDIF
C
C       REGARDLESS OF WHETHER ERRORS OCCURRED, CALL SUBROUTINE TO OUTPUT
C       LIST OF REACTANTS AND COEFFICIENTS
C
        CALL LISTSC
C
C       CALL SUBROUTINE TO OUTPUT RESULTS.  SOME PROCESSING DONE EVEN IF
C       ERRORS OCCURRED
C
        CALL SAVERX
C
C       DONE.  CLOSE WRITE PARTING MESSAGES, CLOSE FILES, AND EXIT.
C
  999   IF (OUT.NE.ICRT) WRITE (OUT,9003)
 9003   FORMAT (/1X,130('*')//,46X,'E N D   P R E P   O U T P U T'/
     &   /1X,130('*'))
        CLOSE (UNIT=OUT)
        IF (OUT.NE.ICRT) THEN
                IF (YESPRP) THEN
                        WRITE (ICRT,9000) MODFIL
 9000                   FORMAT (' MODEL = ''',A16,''' PREPARED.')
                ELSE
                        WRITE (ICRT,9001) MODFIL
 9001                   FORMAT (' MODEL = ''',A16,''' PROCESSED.')
                ENDIF
        ENDIF
 9999   IF (NERR.GT.0) THEN
                WRITE (ICRT,9002) NERR
 9002           FORMAT (' ',I4,' ERRORS OCCURED')
                CALL EXIT (0)
        ELSE
                CALL EXIT
        ENDIF
        END
