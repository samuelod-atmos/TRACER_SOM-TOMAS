C       FILE:  ASMD.FTN                         PREP SUBROUTINE
C
C       WRITTEN BY W.P.L. CARTER
C       UPDATED AND MAINTAINED BY S.E. HEFFRON
C       MAJOR MODIFICATIONS TO PRODUCE FORTRAN CODE BY S.E. HEFFRON
C       LAST UPDATE:  W.P.L. CARTER  6/20/87
C
C
        SUBROUTINE ASMD (R1,R2,B2)
C
C       THIS ROUTINE IS USED TO PRODUCE FORTRAN INSTRUCTIONS BASED
C       ON CALLS WHICH GIVE INSTRUCTIONS IN TERMS OF MACHINE OPERATIONS.
C       IT IS USED SO THAT ROUTINES WHICH WERE WRITTEN TO PRODUCE CODES
C       IN TERMS OF MACHINE INSTRUCTIONS COULD ALSO BE USED TO PRODUCE
C       EQUIVALENT FORTRAN OPERATIONS.  A SEPERATE ENTRY POINT IS INCLUDED
C       FOR EACH TYPE OF "MACHINE" OPERATION.
C
C       MODIFIED BY S. HEFFRON 9/27/85
C
C       ARB VERSION:  CALLED BY VCOEF ONLY.  THIS ROUTINE, AND VCOEF
C                     CAN BE DELETED IF ONLY "NEW" FORMAT INSERTED
C                     INSTRUCTIONS ARE USED.  THIS IS INCLUDED SO MECHANISM
C                     INPUT FILES USED FOR RESEARCH, WHICH USUALLY USE
C                     MACHINE CODE VERSIONS OF PREP, CAN BE PROCESSED.
C
C
C       SPECIFICATIONS FOR PREP PARMS, VARIABLES, AND ARRAYS IN COMMON
C
        INCLUDE 'pspecs.inc'
C
C
C       SPECIFICATINS OF OTHER VARIABLES.  THE /CODE/ COMMON IS USED
C       TO COMMUNICATE WITH SUBROUTINES CALLED BY PNHRXN WHICH PRODUCE THE
C       FORTRAN CODE.
C
      CHARACTER*2 DIFCHR,ARRNAM(0:7)
      INTEGER   R1,R2,B2,DIFNUM,CODEU
      COMMON /CODE/ NC,NC1,DIFNUM,CODEU
C
      DATA ARRNAM /' C','RK',' R','CO','DY','FR','LR',' A'/
C
C
C---------------------------------------------------------------------
C     ENTRIES FOR SINGLE OR NO-REGISTER INSTRUCTIONS
C
C     SECTN:  PRODUCE RETURN INSTRUCTION
C
      ENTRY SECTN
      WRITE (CODEU,600)
  600 FORMAT (6X,'RETURN')
      RETURN
C------------------------------------------------
C     ENTRIES FOR REGISTER-REGISTER INSTRUCTIONS
C
      ENTRY NEGR (R1)
      WRITE (CODEU,602) R1,R1
 602  FORMAT (6X,'R',I1,' = -R',I1)
      GOTO 1210
C
      ENTRY LOADR (R1,R2)
      WRITE (CODEU,604) R1,R2
 604  FORMAT (6X,'R',I1,' = R',I1)
      GOTO 1210
C
      ENTRY LOADNR (R1,R2)
      WRITE (CODEU,602) R1,R2
      GOTO 1210
C
      ENTRY ADDR (R1,R2)
      WRITE (CODEU,606) R1,R1,R2
 606  FORMAT (6X,'R',I1,' = R',I1,' + R',I1)
      GOTO 1210
C
      ENTRY SUBTR (R1,R2)
      WRITE (CODEU,608) R1,R1,R2
 608  FORMAT (6X,'R',I1,' = R',I1,' - R',I1)
      GOTO 1210
C
      ENTRY MULTR (R1,R2)
      WRITE (CODEU,610) R1,R1,R2
 610  FORMAT (6X,'R',I1,' = R',I1,' * R',I1)
      GOTO 1210
C
      ENTRY DIVR (R1,R2)
      WRITE (CODEU,612) R1,R1,R2
 612  FORMAT (6X,'R',I1,' = R',I1,'/R',I1)
      GOTO 1210
C
C-------------------------------------------------------------
C     ENTRIES FOR REGISTER-MEMORY INSTRUCTIONS
C
      ENTRY STORE (R1,R2,B2)
      WRITE (CODEU,614) ARRNAM(B2),R2,R1
 614  FORMAT (6X,A2,'(',I4,') = R',I1)
      GO TO 1200
C
      ENTRY LOAD (R1,R2,B2)
      WRITE (CODEU,616) R1,ARRNAM(B2),R2
 616  FORMAT (6X,'R',I1,' = ',A2,'(',I4,')')
      GO TO 1200
C
      ENTRY LOADN (R1,R2,B2)
      WRITE (CODEU,618) R1,ARRNAM(B2),R2
 618  FORMAT (6X,'R',I1,' = -',A2,'(',I4,')')
      GO TO 1200
C
      ENTRY ADD (R1,R2,B2)
      WRITE (CODEU,620) R1,R1,ARRNAM(B2),R2
 620  FORMAT (6X,'R',I1,' = R',I1,' + ',A2,'(',I4,')')
      GO TO 1200
C
      ENTRY SUBT (R1,R2,B2)
      WRITE (CODEU,622) R1,R1,ARRNAM(B2),R2
 622  FORMAT (6X,'R',I1,' = R',I1,' - ',A2,'(',I4,')')
      GO TO 1200
C
      ENTRY MULT  (R1,R2,B2)
      WRITE (CODEU,624) R1,R1,ARRNAM(B2),R2
 624  FORMAT (6X,'R',I1,' = R',I1,' * ',A2,'(',I4,')')
      GO TO 1200
C
      ENTRY DIV (R1,R2,B2)
      WRITE (CODEU,626) R1,R1,ARRNAM(B2),R2
 626  FORMAT (6X,'R',I1,' = R',I1,'/',A2,'(',I4,')')
C
 1200 IF (B2.LT.0.OR.B2.GT.8) GOTO 900
 1210 NC=NC+1
C-B
      NC1=NC1+1
C-
C     DUMMY ENTRY FOR FREREG
      ENTRY FREREG (B2)
C
      RETURN
C
C     ERROR SECTION.  DELIBERATELY CAUSE ERROR
C     TO GET TRACEBACK
C
  900 WRITE (OUT,901) R1,R2,B2
  901 FORMAT (' ILLEGAL ARGUMENTS ON CALL TO ASMD.  ARGS =',
     & 3I10)
c      I=0
c      I=1/I
      STOP
      END
