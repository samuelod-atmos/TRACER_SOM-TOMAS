C       FILE:  DIFFUN.FTN                       PREP SUBROUTINE
C
C       WRITTEN BY W.P.L. CARTER
C       UPDATED AND MAINTAINED BY S.E. HEFFRON
C       MAJOR REVISIONS TO PRODUCE FORTRAN CODE WRITTEN BY S.E. HEFFRON
C       LAST UPDATE:  W.P.L. CARTER  6/20/87
C
C
        SUBROUTINE DIFFUN
C
C       PRODUCES CODE TO CALCULATE RATES OF REACTIONS AND DERIVITIES,
C       RATES OF FORMATION, AND PSEUDO-UNIMOLECULAR RATES OF REACTION
C       FOR ACTIVE SPECIES ALSO CALCULATES STEADY STATE SPECIES CONC'S.
C
C       CALLED BY:  PNHRXN
C
C
C       SPECIFICATIONS FOR PREP PARMS, VARIABLES, AND ARRAYS IN COMMON.
C
        INCLUDE 'pspecs.inc'
C
C
C       THIS COMMON IS USED TO COMMUNICATE WITH SUBROUTINES CALLED
C       BY PNHRXN WHICH PRODUCE THE FORTRAN CODE.
C
        INTEGER   DIFNUM,DIFTOT,CODEU
        COMMON /CODE/ NC,NC1,DIFNUM,CODEU
C
C       SPECIFICATIONS FOR LOCAL VARIABLES AND ARRAYS.
C
        PARAMETER (MAXIRP=MAXRXN*4,MAXSS1=MAXSS+1)
        INTEGER   LRXBUF(MAXSS1),RXBUF(MAXIRP)
C
        LOGICAL   LX,CHANGE,SSSET(MAXSS),REACTS,NEWSUM
        BYTE DFRATE(MAXRXN)
C
        CHARACTER*1 PLUSCH
        CHARACTER*80  FTNSTR
C
C
C
C       DEFINE RATES OF REACTIONS NOT INVOLVING STEADY STATE SPECIES,
C       AND INDICATE THESE BY DFRATE=1.
C
C       NOTE THAT REACTIONS WHOSE RATE IS USED AS THE RATE CONSTANT
C       FOR ANOTHER MUST NOT HAVE STEADY STATE REACTANTS.
C
C       FOR REACTIONS WITH STEADY STATE REACTANTS, DEFINE PARTIAL RATE
C       IF IT HAS OTHER REACTANTS, AND INDICATE THESE BY DFRATE=0.  IF
C       THE STEADY STATE SPECIE IS THE ONLY REACTANT, DO NOTHING YET,
C       EXCEPT INDICATE THIS BY DFRATE=-1.
C
        WRITE (CODEU,190)
 190    FORMAT ('C'/'C       DEFINE RATES OF REACTIONS, PARTIAL RATES',
     &             /'C       FOR REACTIONS WITH STEADY STATE REACTANTS'
     &             /'C')
        DO 110 IRXN = 1,NRXN
        NR = NRTOSR (IRXN)
        IF (NR.LT.0) THEN
C                                       ! DUMMY REACTION. NO RATE TO DEFINE.
                DFRATE(IRXN)=1
                GOTO 110
        ELSEIF (NR.EQ.1) THEN
C                                       ! SEE IF ONLY REACTANT SS
                IF (IRTOSR(1,IRXN).GE.NS1.AND.IRTOSR(1,IRXN).LE.NS2)
     &           THEN
                        DFRATE(IRXN)=-1
                        GOTO 110
                ENDIF
        ENDIF
        FTNSTR=' '
        WRITE (FTNSTR,200) IRXN
 200    FORMAT (6X,'R(',I4,') = ')
        LS=16
C                                               ! LENGTH OF STRING
        LKB=LKBUF(IRXN)
C                                               ! MULT K BY CONC'S
        IF (RXTYP(IRXN).EQ.0) THEN
                IF (RXTYP(LKB).EQ.7) THEN
                        WRITE (FTNSTR(LS+1:),210) IPHOTR(LKBUF(LKB))
 210                    FORMAT ('RK(',I4,')')
                ELSE
                        WRITE (FTNSTR(LS+1:),210) LKB
                ENDIF
        ELSEIF (RXTYP(IRXN).EQ.1) THEN
                IF (LKB.GT.IRXN.OR.DFRATE(LKB).NE.1) THEN
                        WRITE (OUT,*) 'ERROR.  RATE OF RXN'
     &                   ,LKB,' UNDEFINED.  CAN''T DEFINE '
     &                   ,'K FOR RXN',IRXN
                        NERR=NERR+1
                ENDIF
                WRITE (FTNSTR(LS+1:),215) LKB
C                                                      ! R(LKB)
 215            FORMAT ('R(',I4,')')
        ELSEIF (RXTYP(IRXN).EQ.7) THEN
                WRITE (FTNSTR(LS+1:),210) IPHOTR(LKB)
C                                                      ! RK(IPHOTR(LKB))
        ELSE
                WRITE (FTNSTR(LS+1:),210) IRXN
C                                                      ! RK(IRXN)
        ENDIF
        LS=LS+8
        DFRATE(IRXN)=1
C                                       ! DFRATE=1 IF NO SS REACTANT FOUND
        DO 104 I=1,NR
        J=IRTOSR(I,IRXN)
        IF (J.GE.NS1.AND.J.LE.NS2) THEN
                IF (DFRATE(IRXN).EQ.0) THEN
C                                               ! SS FOUND.
                        WRITE (OUT,*) 'ERROR.  SS + SS REACTION',IRXN
                        NERR=NERR+1
                ELSE
                        DFRATE(IRXN)=0
                ENDIF
        ELSE
                IF (J.GT.0) THEN
C                                                       ! MULT BY CONC
                        IF (J.GT.N0) THEN
                                WRITE (FTNSTR(LS+1:),220) J-N0
 220                            FORMAT ('*A(',I4,')')
                        ELSE
                                WRITE (FTNSTR(LS+1:),221) J
 221                            FORMAT ('*C(',I4,')')
                        ENDIF
                        LS=LS+8
                ELSEIF (-J.LE.MAXMAX) THEN
C                                                       ! OR MULT BY COEF
                        WRITE (FTNSTR(LS+1:),222) -J
 222                    FORMAT ('*CO(',I4,')')
                        LS=LS+9
                ELSE
C                                                       ! OR BY RATE CONSTANT
                        JRXN=-J-MAXMAX
                        IF (RXTYP(JRXN).EQ.7) THEN
                                WRITE (FTNSTR(LS+1:),224) IPHOTR(LKBUF
     &                            (JRXN))
 224                            FORMAT ('*RK(',I4,')')
                                LS=LS+9
                        ELSE
                                WRITE (FTNSTR(LS+1:),224) JRXN
                        ENDIF
                ENDIF
        ENDIF
  104   CONTINUE
        WRITE (CODEU,'(A)') FTNSTR
        NC=NC+1
        NC1=NC1+1
  110   CONTINUE
C
C       PRODUCE CODE TO OBTAIN STEADY STATE CONCENTRATIONS.
C       LOOP THRU SS SPECIES.  PRODUCE CODE FOR SPECIE I IF
C       IT IS FORMED ONLY BY REACTION OF NON-SS SPECIES, OR OF
C       SS SPECIES FOR WHICH CODE HAVE ALREADY BEEN PRODUCED.
C       REACTIONS WHICH FORM SS SPECIES HAVE RATE DEFINED, DFRATE=1
C       MARKS THIS AS HAVING BEEN DEFINED.
C
        IF (NSS.EQ.0) GOTO 1050
C
C       DEFINE LRXBUF AND RXBUF, WHICH TELL WHICH REACTIONS
C       FORM A GIVEN STEADY STATE SPECIE
C
C       IN THIS VERSION, REACTIONS WHERE A SS SPECIES BOTH REACTS
C       AND IS FORMED IS ALLOWED, PROVIDED THAT THE STEADY STATE SPECIE IS
C       BOTH THE FIRST REACTANT AND THE FIRST PRODUCT.  IN THIS CASE, THE
C       CONCENTRATION OF THE SS SPECIE IS NOT DEPENDENT ON THE RATE OF
C       THE REACTION, SO IT IS NOT INCLUDED IN THE RXBUF ARRAY.
C
        WRITE (CODEU,240)
 240    FORMAT ('C'/'C      CALCULATE STEADY-STATE CONCENTRATIONS AND'
     &             /'C      RATES OF REACTIONS WITH SS SPECIES')
        NRX1=NRXN+1
        NSP=1
        DO 1100 IX=1,NSS
        SSSET(IX)=.FALSE.
C                               ! INITIALIZE SS AS NOT 'SET'
        IR=IX+NA2
        print*,'mjk find rxns that produce:',name(ir)
        LRXBUF(IX)=NSP
        DO 1110 J=1,NRXN
        IP1=NPRODS(J)
        IP2=NPRODS(J+1)-1
        IF (IP2.LT.IP1) GOTO 1110
        REACTS=.FALSE.
        DO 1115 I=IP1,IP2
        IF (IPRODS(I).EQ.IR) THEN
          print*,'mjk rxn:',j,' ('//rxnlbl(j)//') produces '//name(ir)
                do ii=1,NRTOSR(J) ! loop over all the reactants
                 if(irtosr(ii,j).eq.ir)then ! ss spec also a reactant
                   print*,'mjk ss spec also a reactant'
                 endif
                enddo
c                        WRITE (OUT,*) 'ERROR.  ILLEGAL REACTION WHERE'
c     &                   ,'SS SPECIES BOTH REACTS AND IS FORMED WITH '
c     &                   ,'NON-UNIT YIELD.'
c                        NERR=NERR+1
c                        GOTO 1110
                IF (I.EQ.IP1) THEN
                        RXBUF(NSP)=J
                ELSEIF (IPRODS(I-1).GE.0) THEN
                        RXBUF(NSP)=J
                ELSE
                        RXBUF(NSP)=J+NRX1*(I-IP1)
                ENDIF
                NSP=NSP+1
        ENDIF
 1115   CONTINUE
C                       ! END LOOP OVER PRODUCTS
 1110   CONTINUE
C                       ! END LOOP OVER REACTIONS
 1100   CONTINUE
C                       ! END LOOP OVER SS SPECIES
        LRXBUF(NSS+1)=NSP
C                               ! NSP USED LATER
        NSP1=NSP+1
C
C       NSLOOP=0                ! NO SS ITERATIONS
        NSSET=0
C                               ! NO SS SPECIES SET
C
C       START OF ITERATIVE LOOP
C
 1002   NSLOOP=NSLOOP+1
        CHANGE=.FALSE.
C                               ! T IF SOME SS DEFINED DURING LOOP
C
        DO 1020 IX=1,NSS
        IF (SSSET(IX)) GOTO 1020
        I=IX+NA2
C
C       FIND OUT IF A REACTION FORMING I INVOLVES AN UN SSSET SS REACTANT
C
        I1=LRXBUF(IX)
        I2=LRXBUF(IX+1)-1
C
        DO 1004 IP=I1,I2
        IRXN=RXBUF(IP)
        IF (IRXN.GT.NRXN) IRXN=IRXN-(IRXN/NRX1)*NRX1
        IF (DFRATE(IRXN).NE.1) GOTO 1020
C                                                       ! REACTION FORMING I
 1004   CONTINUE
C                                                       ! NOT DEFINED.  QUIT
C
C       OK TO DEFINE SS SPECIE I, BECAUSE ALL REACTIONS FORMING IT
C       HAVE DFRATE=1.
C       CALCULATE SS CONC = FORMATION RATE/DESTRUCTION RATE
C
        WRITE (CODEU,243) NAME(I)
 243    FORMAT ('C'/'C',8X,A)
C                                          ! COMMENT LINE WITH NAME OF SPECIES
        FTNSTR=' '
        WRITE (FTNSTR,245) I-NA2
C  MJM changed to FORMAT (6X,'S(',I4,') = (0.') from FORMAT (6X,'S(',I4,') = (')
 245    FORMAT (6X,'S(',I4,') = (0.')
C  MJM changed to LS=19 from LS=16 and NEWSUM=.FALSE. from NEWSUM=.TRUE.
        LS=19
        NEWSUM=.FALSE.
C
        DO 1061 IP=I1,I2
        IRXN=RXBUF(IP)
        IF (IRXN.LE.NRXN) THEN
                IF (.NOT.NEWSUM) THEN
C  MJK changed to 64    IF (LS.GT.65) THEN
                        IF (LS.GT.64) THEN
C                                                       ! CHECK LENGTH OF STRING
                               WRITE (CODEU,'(A)') FTNSTR
                               NC=NC+1
                               NC1=NC1+1
                               FTNSTR='     &'
C                                                      ! START OF CONT. LINE
                               LS=14
                        ENDIF
                        WRITE (FTNSTR(LS+1:),250) IRXN
 250                    FORMAT ('+R(',I4,')')
                        LS=LS+8
                ELSE
                        WRITE (FTNSTR(LS+1:),252) IRXN
 252                    FORMAT ('R(',I4,')')
                        LS=LS+7
                        NEWSUM=.FALSE.
                ENDIF
        ELSE
                ICOEF=IRXN/NRX1
                IRXN=IRXN-ICOEF*NRX1
C                                               ! MULTIPLY RATE BY COEF, IF
C                                               ! APPLICABLE.
C
                IF (LS.GT.64) THEN
C                                               ! CHECK LENGTH OF STRING
                        WRITE (CODEU,'(A)') FTNSTR
                        NC=NC+1
                        NC1=NC1+1
                        FTNSTR='     &'
C                                               ! START OF CONTINUATION LINE
                        LS=14
                ENDIF
                IF (.NOT.NEWSUM) THEN
C                                                    ! SUM ALREADY STARTED
                        WRITE (FTNSTR(LS+1:),250) IRXN
C                                                            ! +R(IRXN)
                        LS=LS+8
                ELSE
                        WRITE (FTNSTR(LS+1:),252) IRXN
C                                                            ! R(IRXN)
                        LS=LS+7
                ENDIF
                DO 1066 J=ICOEF,1,-1
                KCOEF=IPRODS(NPRODS(IRXN)+J-1)
C                                                       ! NONZERO ICOEF IS
                IF (KCOEF.GT.0) GOTO 1067
C                                                       ! PREVIOUS REACTANT.
C                                                       ! IF <0, IT IS COEF
C  MJK changed to 63                IF (LS.GT.64) THEN
                IF (LS.GT.63) THEN
C                                                       ! TO MULT CONC.
                        WRITE (CODEU,'(A)') FTNSTR
                        NC=NC+1
                        NC1=NC1+1
                        FTNSTR='     &'
C                                                ! START OF CONTINUATION LINE
                        LS=14
                ENDIF
                WRITE (FTNSTR(LS+1:),222) -KCOEF
C                                                       ! MULT BY COEF
C  MJM changed to ...+9                LS=LS+8
                LS=LS+9
 1066           CONTINUE
 1067           NEWSUM=.FALSE.
        ENDIF
 1061   CONTINUE
        IF (LS.GT.70) THEN
                WRITE (CODEU,'(A)') FTNSTR
                NC=NC+1
                NC1=NC1+1
                FTNSTR='     &'
C                                             ! START OF CONTINUATION LINE
                LS=15
        ENDIF
        WRITE (FTNSTR(LS+1:),'(A)') ')/'
C                                               ! END OF FORMATION RATE SUM
        LS=LS+2
C
C       NOW, FOR EACH REACTION DESTROYING I, FORM PSEUDO-UNIMOLECULAR
C       DESTRUCTION RATE.
C       NOTE THAT DILUTION ASSUMED NEGLIGABLE FOR STEADY STATE SPECIES.
C       BUT EACH HAS A MINIMUM DECAY RATE OF 'LITTLE' (COEF #INDLIL), TO
C       AVOID DIVIDE-BY-0 ERRORS WHICH MAY OCCUR IF IT IS NOT
C       INVOLVED IN ANY REACTIONS WITH NON-ZERO RATES.
C
C       NOTE THAT ANY REACTION DESTROYING I HAS DFRATE=0 OR -1
C
C  MJK changed to 62                IF (LS.GT.64) THEN
        IF (LS.GT.62) THEN
                WRITE (CODEU,'(A)') FTNSTR
                NC=NC+1
                NC1=NC1+1
                FTNSTR='     &'
C                                             ! START OF CONTINUATION LINE
                LS=14
        ENDIF
        WRITE (FTNSTR(LS+1:),260) INDLIL
 260    FORMAT ('(CO(',I4,')')
        LS=LS+9
C
C       LOOP OVER REACTIONS TO FIND REACTIONS OF I
C
        NSSRXN=NSP
C                       ! COUNTS HOW MANY REACTIONS OF I, STORED IN RXBUF
        DO 1120 IRXN=1,NRXN
        IR=NRTOSR(IRXN)
        REACTS=.FALSE.
        IF (IR.EQ.0) GOTO 1120
        DO 1125 J=1,IR
        IF (IRTOSR(J,IRXN).NE.I) GOTO 1125
        IF (J.EQ.1) THEN
                IF (IPRODS(NPRODS(IRXN)).EQ.I) THEN
C                                                       ! SKIP OVER REACTIONS
                        REACTS=.TRUE.
C                                                       ! WHERE I IS BOTH FORMED
                        NSSRXN=NSSRXN+1
C                                                       ! AND CONSUMED.
                        RXBUF(NSSRXN)=IRXN
C                                                       ! BUT KEEP TRACK OF IT
                        GOTO 1125
C                                                       ! SO RATE WILL BE DEF'D.
                ENDIF
        ELSEIF (REACTS) THEN
                WRITE (OUT,*) 'SS+SS REACTION NO.',IRXN
                NERR=NERR+1
                GOTO 1120
        ENDIF
        REACTS=.TRUE.
        NSSRXN=NSSRXN+1
        RXBUF(NSSRXN)=IRXN
        IF (LS.GT.63) THEN
                WRITE (CODEU,'(A)') FTNSTR
                NC=NC+1
                NC1=NC1+1
                FTNSTR='     &'
C                                               ! START OF CONTINUATION LINE
                LS=14
C                                               ! LS SET TO LINE UP W/LINE ABOVE
        ENDIF
C                                               ! REACTION IRXN IS A REACTION
        IF (DFRATE(IRXN).EQ.-1) THEN
C                                               ! OF SS SPECIE I.  ADD ITS
                IF (RXTYP(IRXN).EQ.0) THEN
C                                               ! PARTIAL RATE TO FPR0
                        JRXN=LKBUF(IRXN)
                        IF (RXTYP(JRXN).EQ.7) THEN
                                WRITE (FTNSTR(LS+1:),265) IPHOTR(LKBUF(
     &                            JRXN))
 265                            FORMAT ('+RK(',I4,')')
                                LS=LS+9
                        ELSE
                                WRITE (FTNSTR(LS+1:),265) JRXN
C                                                                 ! +RK(JRXN)
                                LS=LS+9
                        ENDIF
                ELSEIF (RXTYP(IRXN).EQ.1) THEN
                        WRITE (FTNSTR(LS+1:),250) LKBUF(IRXN)
C                                                                 ! +R(...)
                        LS=LS+8
                ELSEIF (RXTYP(IRXN).EQ.7) THEN
                        WRITE (FTNSTR(LS+1:),265) IPHOTR(LKBUF(IRXN))
C                                                             ! +RK(IPHOTR(...))
                        LS=LS+9
                ELSE
                        WRITE (FTNSTR(LS+1:),265) IRXN
C                                                              ! +RK(IRXN)
                        LS=LS+9
                ENDIF
        ELSE
                WRITE (FTNSTR(LS+1:),250) IRXN
C                                                              ! +R(IRXN)
                LS=LS+8
        ENDIF
 1125   CONTINUE
C                       ! END LOOP OVER REACTANTS
 1120   CONTINUE
C                       ! END LOOP OVER REACTIONS
        WRITE (FTNSTR(LS+1:),'(A)')  ')'
C                                          ! END OF DESTRUCTION RATE SUM
        LS=LS+1
        WRITE (CODEU,'(A)') FTNSTR
C                                            ! CONC OF SS SPECIES
        NC=NC+1
        NC1=NC1+1
C
C       SEE IF RXBUF ARRAY BOUNDS EXCEEDED, AND ABORT IF SO
C
        IF (NSSRXN.GT.MAXIRP) THEN
                I=MAXIRP
                WRITE (OUT,*) 'MAXIMUM DIMENSION FOR RXBUF (',I,
     &           ') EXCEEDED IN DIFFUN.'
                STOP 'MODEL TOO BIG FOR RXBUF'
        ENDIF
C
C       INDICATE SPECIES AS 'SSSET', AND THAT A NEW ONE WAS PROCESSED.
C
        CHANGE=.TRUE.
        NSSET=NSSET+1
        SSSET(I-NA2)=.TRUE.
C
C       SS CONC NOW DEFINED AND IN "S"
C       DEFINE AND STORE RATES OF ALL ITS REACTIONS.
C
        DO 1035 IP=NSP1,NSSRXN
        IRXN=RXBUF(IP)
        FTNSTR=' '
        WRITE (FTNSTR,280) IRXN,I-NA2
 280    FORMAT (6X,'R(',I4,') = S(',I4,') *')
C                                                   !"R(IRXN)=S(ISS)*"
C MJM changed to LS=25        LS=23
        LS=25
        IF (DFRATE(IRXN).EQ.-1) THEN
                IF (RXTYP(IRXN).EQ.0) THEN
                        JRXN=LKBUF(IRXN)
                        IF (RXTYP(JRXN).EQ.7) THEN
                                WRITE (FTNSTR(LS+1:),210) IPHOTR(LKBUF(
     &                            JRXN))
C                                                              ! RK(IPHOTR(...))
                        ELSE
                                WRITE (FTNSTR(LS+1:),210) JRXN
C                                                                     ! RK(JRXN)
                        ENDIF
                ELSEIF (RXTYP(IRXN).EQ.1) THEN
                        WRITE (FTNSTR(LS+1:),215) LKBUF(IRXN)
C                                                                     ! R(...)
                ELSEIF (RXTYP(IRXN).EQ.7) THEN
                        WRITE (FTNSTR(LS+1:),210) IPHOTR(LKBUF(IRXN))
C                                                                     ! RK(...)
                ELSE
                        WRITE (FTNSTR(LS+1:),210) IRXN
C                                                                     ! RK(IRXN)
                ENDIF
        ELSE
                WRITE (FTNSTR(LS+1:),215) IRXN
C                                                                     ! R(IRXN)
        ENDIF
        WRITE (CODEU,'(A)') FTNSTR
        NC=NC+1
        NC1=NC1+1
        DFRATE(IRXN)=1
 1035   CONTINUE
 1020   CONTINUE
C
C       END LOOP OVER SS SPECIES.  SEE IF ANOTHER LOOP NEEDED, OR IF
C       A LOOP WENT THRU W/O CHANGE, WHICH MEANS THAT THE SS SPECIES
C       CAN'T BE ORDERED.
C
        IF (NSSET.LT.NSS) THEN
                IF (CHANGE) THEN
                        GOTO 1002
                ELSE
                        WRITE (OUT,*) 'ERROR.  SOME SS SPECIES CAN''T  '
     &                   ,'BE ORDERED.  NO. ORDERED =',NSSET,'.  TOTAL'
     &                   ,' NO SS SPECIES =',NSS
                        NERR=NERR+1
                ENDIF
        ENDIF
        WRITE (OUT,*) NSLOOP,' ITERATIONS REQUIRED TO ORDER '
     &   ,'STEADY STATE SPECIES.'
C
 1050  CONTINUE
C
C     END SS SECTION.  ALL SS CONC'S AND RATES OF REACTIONS FORMING
C     SS SPECIES DEFINED.  RATES OF ALL REACTIONS SHOULD BE DEFINED.
C       CHECK AND MAKE SURE THIS IS SO.
C
        DO 1900 IRXN = 1,NRXN
        IF (DFRATE(IRXN).NE.1) THEN
                WRITE (OUT,*) 'ERROR.  RATE OF REACTION',IRXN
     &           ,' UNDEFINED AFTER END OF SS LOOP.'
                NERR=NERR+1
        ENDIF
 1900   CONTINUE
C
C
C     ALL RATES DEFINED.  DEFINE DERIVITIVES FOR ACTIVE SPECIES.
C
C       DEFINE TOTAL FORMATION RATE AND SAVE IN FR ARRAY
C
        WRITE (CODEU,282)
 282    FORMAT ('C'/'C       DEFINE FORMATION RATES FOR ACTIVE SPECIES')
C
        DO 2000 I=NA1,NA2
        NEWSUM=.TRUE.
        WRITE (CODEU,243) NAME(I)
C                                       ! COMMENT LINE WITH NAME OF SPECIES
        FTNSTR=' '
        WRITE (FTNSTR,285) I-N0
 285    FORMAT (6X,'FR(',I4,') = ')
        LS=16
C
C
C       LOOP OVER ALL REACTIONS.  ADD RATE IF IT IS A PRODUCT.
C
        LCOUNT = 1
        DO 2120 IRXN=1,NRXN
        IP1=NPRODS(IRXN)
        IP2=NPRODS(IRXN+1)-1
        IF (IP2.GE.IP1) THEN
             DO 2130 IX=IP1,IP2
             IF (IPRODS(IX).EQ.I) THEN         ! THIS REACTION FORMS IR
c--calculate the additional length to be added to the current line--
              lsadd = 8
              jx = ix
 2131         jx=jx-1   ! potential index location for a leading coefficient
              if(jx.ge.ip1.and.iprods(max(jx,ip1)).lt.0)then
               lsadd = lsadd + 9
               goto 2131
              endif
c--dump the line and start over if needed--
              if(ls+lsadd.gt.72)then
               write(codeu,'(a)')ftnstr
               nc = nc+1
               nc1=nc1+1
               lcount=lcount+1
               ftnstr='     &                   '
               ls=15
              endif
c--check for more than 20 lines--
              if(ftnstr(:25).eq.'     &                   ' .and.
     +                                           lcount.gt.20)then
               write(ftnstr,286)i-n0,i-n0
 286           format(6x,"FR(",i4,") = FR(",i4,")")
               ls = 25
               lcount = 1
              endif 
c--add a "+" to the current line if this is not the first entry--
              if(.not.newsum)then
               write(ftnstr(ls+1:),'(a)')'+'
               ls = ls+1
              else
               newsum=.false.
              endif
c--add the reaction to the current line--
              write(ftnstr(ls+1:),215)irxn
              ls = ls + 7
              jx = ix
 2132         jx = jx-1 ! potential index location for a leading coefficient
              if(jx.ge.ip1.and.iprods(max(jx,ip1)).lt.0)then
               write(ftnstr(ls+1:),222)-iprods(jx)
               ls = ls + 9
               goto 2132
              endif
             ENDIF
 2130        CONTINUE
        ENDIF
 2120   CONTINUE
C                                       ! END LOOP OVER REACTIONS
C
C       STORE FORMATION RATE
C
        IF (NEWSUM)  WRITE (FTNSTR(LS+1:),'(A)') '0'
        WRITE (CODEU,'(A)') FTNSTR
        NC=NC+1
        NC1=NC1+1
 2000   CONTINUE
C                                       ! END LOOP OVER SPECIES FOR FORMATION
C
C
C       LOOP OVER SPECIES FOR LOSS RATES.
C
        WRITE (CODEU,340)
 340    FORMAT ('C'/'C       DEFINE LOSS RATES OF ACTIVE SPECIES')
C
        DO 2001 I=NA1,NA2
C
C       SUM UP PSEUDO-UNIMOLECULAR LOSS RATES IN LR ARRAY
C       (IN THIS VERSION, FORM OUTPUT STRING IN FTNSTR)
C
        WRITE (CODEU,243) NAME(I)
C                                        ! COMMENT LINE WITH NAME OF SPECIES
C
        LX=.TRUE.
        PLUSCH=' '
C
C       LOOP OVER ALL REACTIONS.  SUBTRACT RATE IF I IS A REACTANT,
C
        DO 2200 IRXN=1,NRXN
        NR=NRTOSR(IRXN)
        IF (NR.GT.0) THEN
                NIX=0
                DO 2210 IX=1,NR
                IF (IRTOSR(IX,IRXN).EQ.I) THEN
                        NIX=NIX+1
                        IXX=IX
                ENDIF
 2210           CONTINUE
                IF (NIX.EQ.0) GOTO 2200
        ELSE
                GOTO 2200
        ENDIF
C
C       SPECIES I REACTS IN REACTION = IRXN.  CALCULATE PU DESTRUCTION
C       RATE.  IXX = LAST SPECIES I INDEX.  NIX = NO. TIMES SPECIE IN
C       REACTION.  FIRST WRITE START IF NONE WRITTEN.
C
        IF (LX) THEN
                LX=.FALSE.
                FTNSTR=' '
                WRITE (FTNSTR,345) I-N0
C                                        ! "LR(I-N0) = "
 345            FORMAT (6X,'LR(',I4,') = ')
                LS=17
        ENDIF
C
        LKB=LKBUF(IRXN)
C                                                       ! MULT K BY CONC'S
C  MJK changed to 63                IF (LS.GT.64) THEN
        IF (LS.GT.63) THEN
                WRITE (CODEU,'(A)') FTNSTR
                NC=NC+1
                NC1=NC1+1
                FTNSTR='     &'
C                                    ! START OF CONT. LINE
                LS=15
        ENDIF
        IF (RXTYP(IRXN).EQ.0) THEN
                IF (RXTYP(LKB).EQ.7) THEN
                        WRITE (FTNSTR(LS+1:),267) PLUSCH,
     &                   IPHOTR(LKBUF(LKB))
C                                                                     ! +RK(...)
                ELSE
                        WRITE (FTNSTR(LS+1:),267) PLUSCH,LKB
C                                                                     ! +RK(LKB)
                ENDIF
        ELSEIF (RXTYP(IRXN).EQ.1) THEN
                STOP 'K = RATE NOT SUPPORTED IN THIS VERSION'
        ELSEIF (RXTYP(IRXN).EQ.7) THEN
                WRITE (FTNSTR(LS+1:),267) PLUSCH,IPHOTR(LKB)
C                                                                    ! +RK(...)
        ELSE
                WRITE (FTNSTR(LS+1:),267) PLUSCH,IRXN
C                                                                    ! +RK(IRXN)
        ENDIF
 267    FORMAT (A1,'RK(',I4,')')
        PLUSCH='+'
        LS=LS+9
        DO 2230 JX=1,NR
        IF (JX.EQ.IXX) GOTO 2230
C  MJK changed to 63                IF (LS.GT.64) THEN
        IF (LS.GT.63) THEN
                WRITE (CODEU,'(A)') FTNSTR
                NC=NC+1
                NC1=NC1+1
                FTNSTR='     &  '
                LS=15
        ENDIF
        J=IRTOSR(JX,IRXN)
        IF (J.GT.0) THEN
C                                                     ! MULT BY CONC
                IF (J.LT.NA1) THEN
                        WRITE (FTNSTR(LS+1:),221) J
C 221                   FORMAT ('*C(',I4,')')
                        LS=LS+8
                ELSEIF (J.GT.NA2) THEN
                        WRITE (FTNSTR(LS+1:),223) J-NA2
 223                    FORMAT ('*S(',I4,')')
                        LS=LS+8
                ELSE
                        WRITE (FTNSTR(LS+1:),220) J-N0
C 220                   FORMAT ('*A(',I4,')')
                        LS=LS+8
                ENDIF
        ELSEIF (-J.LE.MAXMAX) THEN
C                                                     ! OR MULT BY COEF
                WRITE (FTNSTR(LS+1:),222) -J
C 222           FORMAT ('*CO(',I4,')')                  ! (DEFINED ABOVE)
                LS=LS+9
        ELSE
C                                                     ! OR BY RATE CONSTANT
                JRXN=-J-MAXMAX
                IF (RXTYP(JRXN).EQ.7) THEN
                        WRITE (FTNSTR(LS+1:),224) IPHOTR(LKBUF(JRXN))
C 224                   FORMAT ('*RK(',I4,')')          ! (DEFINED ABOVE)
                ELSE
                        WRITE (FTNSTR(LS+1:),224) JRXN
                ENDIF
                LS=LS+9
        ENDIF
 2230   CONTINUE
        IF (NIX.GT.1) THEN
               IF (LS.GT.70) THEN
                       WRITE (CODEU,'(A)') FTNSTR
                       NC=NC+1
                       NC1=NC1+1
                       FTNSTR='     &  '
                       LS=15
                ENDIF
                WRITE (FTNSTR(LS+1:),360) NIX
 360            FORMAT ('*',I1)
                LS=LS+2
        ENDIF
C
 2200   CONTINUE
C                       ! END LOOP OVER REACTIONS
C
C       STORE PU DESTRUCTION RATE
C
        IF (LX) THEN
                WRITE (CODEU,'(6X,''LR('',I4,'') = 0.0'')') I-N0
        ELSE
                WRITE (CODEU,'(A)') FTNSTR
        ENDIF
C
        NC=NC+1
        NC1=NC1+1
C
 2001   CONTINUE
C                       ! END LOOP OVER ACTIVE SPECIES FOR LOSS
C
        RETURN
        END
